variables:
  AWS_ACCESS_KEY_ID: "$CI_ONLY_AWS_ACCESS_KEY"
  AWS_SECRET_ACCESS_KEY: "$CI_ONLY_AWS_SECRET_ACCESS_KEY"

stages:
  - install
  - build
  - deploy

Install:
  stage: install
  image: node:lts-alpine
  cache:
    paths:
      - .npm/
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

Test:
  stage: build
  image: node:lts-alpine
  script:
    - npm run test:coverage
  dependencies:
    - Install

Lint:
  stage: build
  image: node:lts-alpine
  script:
    - npm run lint
  dependencies:
    - Install

Build:
  stage: build
  image: node:lts-alpine
  script:
    - npm run build
  dependencies:
    - Install
  artifacts:
    paths:
      - dist/

.deploy_template: &deploy
  stage: deploy
  image:
    name: hashicorp/terraform:light
    entrypoint: [""]
  script:
    - terraform init
    - terraform workspace select $ENVIRONMENT || terraform workspace new $ENVIRONMENT
    - terraform apply -auto-approve
    # Install AWS CLI
    - apk add --no-cache python python-dev py-pip build-base
    - pip install awscli==1.16.303
    # Publish Artifact to S3 and Invalidate the CloudFront Cache
    - aws s3 sync --delete dist s3://salte-ci-$ENVIRONMENT
    - aws cloudfront create-invalidation --distribution-id $(terraform output distribution_id) --paths /*

Deploy to Alpha:
  <<: *deploy
  variables:
    ENVIRONMENT: alpha
  environment:
    name: alpha
    url: https://alpha.salte.ci
  only:
    - alpha

Deploy to Live:
  <<: *deploy
  variables:
    ENVIRONMENT: live
  environment:
    name: live
    url: https://salte.ci
  only:
    - live
